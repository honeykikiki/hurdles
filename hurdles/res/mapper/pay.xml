<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pay">
	<select id="payList" parameterType="payVo" resultType="payVo">
		<!-- SELECT 
	    R.RESTAURANT_NAME, R.RESTAURANT_NO, P.CREATE_DATE, O.ORDERS_NO,
	    P.PAY_NO, 
	    SUM(PROD.PRODUCT_PRICE * OP.ORDERS_PRODUCT_QTY) AS PAY_TOTAL_PRICE,
	    MIN(PROD.PRODUCT_NAME) || '외 ' || (COUNT(PROD.PRODUCT_NO) - 1) || '개' AS PRODUCT_NAME
		FROM PAY P
		LEFT JOIN ORDERS O ON O.ORDERS_NO = P.ORDERS_NO
		LEFT JOIN ORDERS_PRODUCT OP ON OP.ORDERS_NO = O.ORDERS_NO
		LEFT JOIN PRODUCT PROD ON PROD.PRODUCT_NO = OP.PRODUCT_NO
		LEFT JOIN RESTAURANT R ON R.RESTAURANT_NO = PROD.RESTAURANT_NO
		WHERE O.MEMBER_NO = #{memberNo}
		GROUP BY R.RESTAURANT_NAME, R.RESTAURANT_NO, P.CREATE_DATE, O.ORDERS_NO,
		    P.PAY_NO
		ORDER BY P.PAY_NO DESC -->
		SELECT 
					P.CREATE_DATE, O.ORDERS_NO,
					P.PAY_NO, P.PAY_PRICE, P.PAY_TOTAL_PRICE,
					<!-- 여기 부분 하나만 가져오 긴함 허성진 -->
                    MIN(R.RESTAURANT_NO) AS RESTAURANT_NO,
                    <!-- 여기 부분 하나만 가져오 긴함 허성진 -->
					MIN(R.RESTAURANT_NAME) AS RESTAURANT_NAME,
					CASE 
			        WHEN COUNT(PROD.PRODUCT_NO) - 1 = 0 THEN MIN(PROD.PRODUCT_NAME)
			        ELSE MIN(PROD.PRODUCT_NAME) || ' 외 ' || (COUNT(PROD.PRODUCT_NO) - 1) || '개'
			        END AS PRODUCT_NAME
				FROM PAY P
				LEFT JOIN ORDERS O ON O.ORDERS_NO = P.ORDERS_NO
				LEFT JOIN ORDERS_PRODUCT OP ON OP.ORDERS_NO = O.ORDERS_NO
				LEFT JOIN PRODUCT PROD ON PROD.PRODUCT_NO = OP.PRODUCT_NO
				LEFT JOIN RESTAURANT R ON R.RESTAURANT_NO = PROD.RESTAURANT_NO
				WHERE O.MEMBER_NO = #{memberNo}
				GROUP BY P.CREATE_DATE, O.ORDERS_NO, 
						P.PAY_NO, P.PAY_PRICE, P.PAY_TOTAL_PRICE
				ORDER BY P.PAY_NO DESC
	</select>
	
	<select id="payDetail" parameterType="payVo" resultType="payVo">
		<!-- SELECT 
	    R.RESTAURANT_NAME, R.RESTAURANT_NO, P.CREATE_DATE, O.ORDERS_NO, O.ORDERS_ADD1, O.ORDERS_ADD2, P.PAY_PRICE, P.PAY_MINUS, P.PAY_COUPON,
	    P.PAY_NO,
	    SUM(PROD.PRODUCT_PRICE * OP.ORDERS_PRODUCT_QTY) AS PRICE,
	    MIN(PROD.PRODUCT_NAME) || '외 ' || (COUNT(PROD.PRODUCT_NO) - 1) || '개' AS PRODUCT_NAME
		FROM PAY P
		LEFT JOIN ORDERS O ON O.ORDERS_NO = P.ORDERS_NO
		LEFT JOIN ORDERS_PRODUCT OP ON OP.ORDERS_NO = O.ORDERS_NO
		LEFT JOIN PRODUCT PROD ON PROD.PRODUCT_NO = OP.PRODUCT_NO
		LEFT JOIN RESTAURANT R ON R.RESTAURANT_NO = PROD.RESTAURANT_NO
		WHERE O.MEMBER_NO = #{memberNo}
        AND O.ORDERS_NO = #{ordersNo}
		GROUP BY R.RESTAURANT_NAME, R.RESTAURANT_NO, P.CREATE_DATE, O.ORDERS_NO,O.ORDERS_ADD1, O.ORDERS_ADD2,P.PAY_PRICE,P.PAY_MINUS, P.PAY_COUPON,
		    P.PAY_NO
		ORDER BY P.PAY_NO DESC -->
		SELECT 
	    P.CREATE_DATE, O.ORDERS_NO, O.ORDERS_ADD1, O.ORDERS_ADD2, P.PAY_PRICE, P.PAY_MINUS, P.PAY_COUPON,
	    P.PAY_NO, P.PAY_TOTAL_PRICE,
	    <!-- 여기 부분 하나만 가져오 긴함 허성진 -->
        MIN(R.RESTAURANT_NO) AS RESTAURANT_NO,
        <!-- 여기 부분 하나만 가져오 긴함 허성진 -->
		MIN(R.RESTAURANT_NAME) AS RESTAURANT_NAME,
        CASE 
        WHEN COUNT(PROD.PRODUCT_NO) - 1 = 0 THEN MIN(PROD.PRODUCT_NAME)
        ELSE MIN(PROD.PRODUCT_NAME) || ' 외 ' || (COUNT(PROD.PRODUCT_NO) - 1) || '개'
        END AS PRODUCT_NAME
		FROM PAY P
		LEFT JOIN ORDERS O ON O.ORDERS_NO = P.ORDERS_NO
		LEFT JOIN ORDERS_PRODUCT OP ON OP.ORDERS_NO = O.ORDERS_NO
		LEFT JOIN PRODUCT PROD ON PROD.PRODUCT_NO = OP.PRODUCT_NO
		LEFT JOIN RESTAURANT R ON R.RESTAURANT_NO = PROD.RESTAURANT_NO
		WHERE O.MEMBER_NO = #{memberNo}
        AND O.ORDERS_NO = #{ordersNo}
		GROUP BY P.CREATE_DATE, O.ORDERS_NO,O.ORDERS_ADD1, O.ORDERS_ADD2,P.PAY_PRICE,P.PAY_MINUS, P.PAY_COUPON,
		    P.PAY_NO,P.PAY_PRICE, P.PAY_TOTAL_PRICE
	</select>
	
	<insert id="payInsert" parameterType="payVo">
		INSERT INTO PAY
		VALUES (PAY_SEQ.NEXTVAL, #{ordersNo}, SYSDATE, NULL, #{payPlus}, #{payMinus}, #{payCoupon}, #{payTotalPrice}, #{payPrice})
	</insert>
	
	<update id="addressUpdate" parameterType="payVo">
		UPDATE MEMBER_PROFILE
		   SET MEMBER_ADD1 = #{memberAdd1},
		       MEMBER_ADD2 = #{memberAdd2}
		 WHERE MEMBER_NO = #{memberNo}	
	</update>
	
	
	
<!-- 	어드민화면 김은영  -->
	<select id ="adminPayList" resultType="payVo" parameterType="payVo">
		  SELECT 
			    P.PAY_NO,
			    O.ORDERS_NO,
			    P.CREATE_DATE,
			    P.REMOVE_DATE,
			    P.PAY_TOTAL_PRICE,
			    P.PAY_PRICE,
			    MP.MEMBER_NAME
			FROM 
			    PAY P
			LEFT JOIN 
			    ORDERS O ON P.ORDERS_NO = O.ORDERS_NO
			LEFT JOIN 
			    MEMBER_PROFILE MP ON O.MEMBER_NO = MP.MEMBER_NO
			ORDER BY 
			    P.CREATE_DATE DESC
		
	
	</select>

	 <select id="getAllCount" parameterType="pagenation" resultType="int" >
			SELECT COUNT(*)
			FROM PAY
	</select>
	
	<select id="getPayNo" resultType="int">
		SELECT PAY_SEQ.NEXTVAL FROM DUAL
	</select>	
	
</mapper>